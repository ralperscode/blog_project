<%- include("partials/header") -%>
<div class="container compose-page-contents">
  <h1>Compose</h1>
  <form id="compose-form" action="/compose" method="post">
    <div class="form-group">
      <label for="title">Title</label>
      <input class="form-control" id="title" type="text" name="postTitle">
      <label for="editor">Post</label>
      <!-- Create the editor container -->
      <div class="quill-div">
        <div id="editor" style="height: 200px">
          <p><br></p>
        </div>
      </div>

      <input type="hidden" id="body" name="postBody" rows="3"></input>
      <input type="hidden" id="bodyText" name="postBodyText"></input>
    </div>
    <button class= "btn btn-primary" type="button" onClick="parseQuill()" name="composeButton">Publish</button>
  </form>
</div>

<script type="text/javascript">
  function parseQuill(){
    document.getElementById("body").value = encodeURIComponent(JSON.stringify(quill.getContents()));
    document.getElementById("bodyText").value = quill.getText();
    document.getElementById("compose-form").submit();
  }
  // works in as much as it creates the db entry
  // function parseQuill(){
  //   const delta = quill.getContents();
  //   document.getElementById("body").setAttribute("value", delta);
  //   document.getElementById("compose-form").submit();
  // }
</script>

<!-- Include the Quill library -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<!-- scripts for image resize and drop modules -->
<script src="/JS/image-resize.min.js"></script>
<script src="/JS/image-drop.min.js"></script>


<!-- Initialize Quill editor -->
<script>
  // quill imports
  var FontAttributor = Quill.import('attributors/class/font');
  var BlockEmbed = Quill.import('blots/block/embed');
  var Image = Quill.import('formats/image');
  // whitelist for supported fonts
FontAttributor.whitelist = [
  'libre-baskerville', 'pt-serif', 'playfair-display'
];

// extend quill to support dividers in post content (horizontal rule)
class DividerBlot extends BlockEmbed { }
DividerBlot.blotName = 'divider';
DividerBlot.tagName = 'hr'

// extend quill to support images from URL's
class ImageURL extends Image{}
ImageURL.blotName = 'imgURL';
ImageURL.tagName = 'img'

// register new quill features
Quill.register(FontAttributor, true);
Quill.register(DividerBlot);
Quill.register(ImageURL);

  var toolbarOptions = [
  // font options with defaults from theme. Custom size options
  [{ 'font': ['','libre-baskerville', 'pt-serif', 'playfair-display'] },{ 'size': ['small', false, 'large', 'huge'] }],
  // font color and highlight options with defaults from theme
  [{ 'color': [] }, { 'background': [] }],
  // font styling
  ['bold', 'italic', 'underline', 'strike'],
  // formatting
  [{ 'align': [] }],
  [{ 'list': 'ordered'}, { 'list': 'bullet' }],
  [{ 'script': 'sub'}, { 'script': 'super' }],
  [{ 'indent': '-1'}, { 'indent': '+1' }],
  // embed image or video
  ['image', 'video'],
  // quotes or code
  ['link','blockquote', 'code-block', 'code'],
  // optional header buttons and formatting
  [{ 'header': 1 }, { 'header': 2 },{ 'header': [1, 2, 3, 4, 5, 6, false] }],
  // invert text direction button
  [{ 'direction': 'rtl' }],
  // reset formatting button
  ['clean']
];

var quill = new Quill('#editor', {
  modules: {
    toolbar: toolbarOptions,
    imageResize: {},
    imageDrop: true,
  },
  theme: 'snow',
  placeholder: "Write and format post here."
});

// add divider button
var qlTollbar = document.querySelector(".ql-toolbar");

dividerButton = document.createElement("button");
        dividerButton.innerHTML = '<i class="fas fa-minus"></i>';
        dividerButton.classList.add("ql-divider")
        dividerButton.setAttribute("type", "button");
        dividerButton.id="divider-button";

dividerButtonSpan = document.createElement("span");
        dividerButtonSpan.classList.add("ql-formats");
        dividerButtonSpan.appendChild(dividerButton);
        qlTollbar.appendChild(dividerButtonSpan);

// add image URL button
imgURLButton = document.createElement("button");
        imgURLButton.innerHTML = '<i class="fas fa-window-maximize"></i>';
        imgURLButton.classList.add("ql-imgURL")
        imgURLButton.setAttribute("type", "button");
        imgURLButton.id="imgURL-button";

const formatSpans = document.querySelectorAll(".ql-formats")
formatSpans[7].appendChild(imgURLButton);

// implement divider functionality
document.querySelector('.ql-divider').addEventListener("click", function() {
  let range = quill.getSelection(true);
  quill.insertText(range.index, '\n', Quill.sources.USER);
  quill.insertEmbed(range.index + 1, 'divider', true, Quill.sources.USER);
  quill.setSelection(range.index + 2, Quill.sources.SILENT);

});

// implement insert image from URL functionality
document.querySelector('.ql-imgURL').addEventListener("click", function() {
  var range = quill.getSelection();
  var value = prompt('What is the image URL');
  quill.insertEmbed(range.index, 'image', value, Quill.sources.USER);
});
</script>

<%- include("partials/footer") -%>
